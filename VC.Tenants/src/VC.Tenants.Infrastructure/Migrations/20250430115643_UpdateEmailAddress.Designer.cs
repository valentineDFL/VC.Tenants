// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VC.Tenants.Infrastructure.Persistence;

#nullable disable

namespace VC.Tenants.Infrastructure.Migrations
{
    [DbContext(typeof(TenantsDbContext))]
    [Migration("20250430115643_UpdateEmailAddress")]
    partial class UpdateEmailAddress
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("tenants")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VC.Tenants.Entities.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tenants", "tenants");
                });

            modelBuilder.Entity("VC.Tenants.Entities.Tenant", b =>
                {
                    b.OwnsOne("VC.Tenants.Entities.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<Guid>("TenantId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("TenantId");

                            b1.ToTable("Tenants", "tenants");

                            b1.WithOwner()
                                .HasForeignKey("TenantId");

                            b1.OwnsOne("VC.Tenants.Entities.Address", "Address", b2 =>
                                {
                                    b2.Property<Guid>("ContactInfoTenantId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("City")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Country")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("House")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Street")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("ContactInfoTenantId");

                                    b2.ToTable("Tenants", "tenants");

                                    b2.WithOwner()
                                        .HasForeignKey("ContactInfoTenantId");
                                });

                            b1.OwnsOne("VC.Tenants.Entities.EmailAddress", "EmailAddress", b2 =>
                                {
                                    b2.Property<Guid>("ContactInfoTenantId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Email")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<bool>("IsConfirmed")
                                        .HasColumnType("boolean");

                                    b2.HasKey("ContactInfoTenantId");

                                    b2.ToTable("Tenants", "tenants");

                                    b2.WithOwner()
                                        .HasForeignKey("ContactInfoTenantId");
                                });

                            b1.Navigation("Address")
                                .IsRequired();

                            b1.Navigation("EmailAddress")
                                .IsRequired();
                        });

                    b.OwnsOne("VC.Tenants.Entities.TenantConfiguration", "Config", b1 =>
                        {
                            b1.Property<Guid>("TenantId")
                                .HasColumnType("uuid");

                            b1.Property<string>("About")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Language")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("TimeZoneId")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("TenantId");

                            b1.ToTable("Tenants", "tenants");

                            b1.WithOwner()
                                .HasForeignKey("TenantId");
                        });

                    b.OwnsOne("VC.Tenants.Entities.WorkSchedule", "WorkSchedule", b1 =>
                        {
                            b1.Property<Guid>("TenantId")
                                .HasColumnType("uuid");

                            b1.HasKey("TenantId");

                            b1.ToTable("Tenants", "tenants");

                            b1.WithOwner()
                                .HasForeignKey("TenantId");

                            b1.OwnsMany("VC.Tenants.Entities.DaySchedule", "WeekSchedule", b2 =>
                                {
                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uuid");

                                    b2.Property<int>("Day")
                                        .HasColumnType("integer");

                                    b2.Property<DateTime>("EndWork")
                                        .HasColumnType("timestamp with time zone");

                                    b2.Property<DateTime>("StartWork")
                                        .HasColumnType("timestamp with time zone");

                                    b2.Property<Guid>("TenantId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("Id");

                                    b2.HasIndex("TenantId");

                                    b2.ToTable("DaySchedule", "tenants");

                                    b2.WithOwner()
                                        .HasForeignKey("TenantId");
                                });

                            b1.Navigation("WeekSchedule");
                        });

                    b.Navigation("Config")
                        .IsRequired();

                    b.Navigation("ContactInfo")
                        .IsRequired();

                    b.Navigation("WorkSchedule")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
